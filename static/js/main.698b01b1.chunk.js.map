{"version":3,"sources":["ducks/reducers.js","UI/Components/PrivateRoute.jsx","UI/Components/AddTodo.jsx","UI/Components/TodoItem.js","UI/Routes/Todos.jsx","UI/Routes/SignIn.jsx","App.js","index.js"],"names":["rootReducer","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","PrivateRoute","children","remainingProps","auth","useSelector","state","render","location","isLoaded","isEmpty","to","pathname","from","AddTodo","useState","presentToDo","setPresentToDo","useFirestore","uid","className","action","type","name","value","onChange","currentTarget","onClick","event","todo","preventDefault","collection","doc","add","title","isDone","then","docRef","update","todoID","id","ToDoItem","isTodoItemDone","setTodoItemDone","class","checked","delete","alert","catch","error","console","disabled","Todos","displayName","useFirestoreConnect","storeAs","todos","data","style","listStyleType","Object","values","map","SignIn","useFirebase","history","useHistory","login","provider","push","App","textAlign","path","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.698b01b1.chunk.js","sourcesContent":["import {combineReducers} from \"redux\";\r\nimport {firebaseReducer} from \"react-redux-firebase\";\r\nimport {firestoreReducer} from \"redux-firestore\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n});","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst PrivateRoute = ({ children, ...remainingProps }) => {\r\n  const auth = useSelector(state => state.firebase.auth);\r\n  return (\r\n    <Route\r\n      {...remainingProps}\r\n      render={({ location }) =>\r\n        isLoaded(auth) && !isEmpty(auth) ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default PrivateRoute;","import React, { useState } from \"react\";\r\nimport { useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst AddTodo = () => {\r\n  const [presentToDo, setPresentToDo] = useState(\"\");\r\n  const firestore = useFirestore();\r\n  const { uid } = useSelector((state) => state.firebase.auth);\r\n  const handleChange = ({ currentTarget: { name, value } }) => {\r\n    if (name === \"addTodo\") {\r\n      setPresentToDo(value);\r\n    }\r\n  };\r\n  const addNewTodo = (todo) => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"todos\")\r\n      .add({\r\n        title: todo,\r\n        isDone: false,\r\n      })\r\n      .then((docRef) => {\r\n        docRef.update({\r\n          todoID: docRef.id,\r\n        });\r\n      });\r\n    setPresentToDo(\"\");\r\n  };\r\n  return (\r\n    <div className='container d-flex justify-content-center mb-6'>\r\n      <form action=\"\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"addTodo\"\r\n            value={presentToDo}\r\n            onChange={handleChange}\r\n            className='mt-2 mb-5'\r\n          />\r\n          <button\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              addNewTodo(presentToDo);\r\n          }}\r\n          className=\"btn btn-info ml-5\"\r\n        >\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default AddTodo;","import React, { useState } from \"react\";\r\nimport { useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nconst ToDoItem = ({ isDone, title, todoID }) => {\r\n  const [isTodoItemDone, setTodoItemDone] = useState(isDone);\r\n  const firestore = useFirestore();\r\n  const {uid} = useSelector(state => state.firebase.auth);\r\n\r\n  const handleChange = (event) => {\r\n    if (event.currentTarget.type === \"checkbox\") {\r\n      setTodoItemDone(!isTodoItemDone);\r\n      firestore.collection(\"users\").doc(uid).collection(\"todos\").doc(todoID).update({\r\n        isDone: !isTodoItemDone\r\n      })\r\n    }\r\n  };\r\n\r\n  const deleteTodo = () => {\r\n    firestore.collection(\"users\").doc(uid).collection(\"todos\").doc(todoID).delete().then(function() {\r\n      alert(\"Item successfully deleted.\");      \r\n    }).catch(function(error) {\r\n      console.error(\"Error removing document: \", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul class=\"list-group\">\r\n        <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n          <span>{title}</span>\r\n          <span>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"\"\r\n              id=\"\"\r\n              onChange={handleChange}\r\n              checked={isTodoItemDone}\r\n            />\r\n          </span>\r\n          <span>{isTodoItemDone ? \r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={deleteTodo} >Remove</button> :\r\n            <button className=\"btn btn-secondary\" disabled>Remove</button>}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default ToDoItem;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AddTodo from \"../Components/AddTodo\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport ToDoItem from \"../Components/TodoItem\";\r\nconst Todos = () => {\r\n  const { displayName, uid } = useSelector((state) => state.firebase.auth);\r\n  useFirestoreConnect({\r\n    collection: `users/${uid}/todos`,\r\n    storeAs: \"todos\",\r\n  });\r\n  const todos = useSelector((state) => state.firestore.data.todos);\r\n  return (\r\n    <div>\r\n      <h3>Hello {displayName}</h3>\r\n      <h4 className=\"mt-5\">Todos</h4>\r\n      <AddTodo />\r\n      <ul\r\n        style={{\r\n          listStyleType: \"none\",\r\n        }}\r\n      >\r\n        {todos &&\r\n          Object.values(todos).map((todo) => (\r\n            <li>\r\n              {todo === null ? '' : \r\n                <ToDoItem\r\n                  title={todo.title}\r\n                  isDone={todo.isDone}\r\n                  todoID={todo.todoID}\r\n                />\r\n              }\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Todos;","import React from \"react\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst SignIn = () => {\r\n  const firebase = useFirebase();\r\n  const history = useHistory();\r\n\r\n  const signInWithGoogle = () => {\r\n    firebase\r\n      .login({\r\n        provider: \"google\",\r\n        type: \"popup\",\r\n      })\r\n      .then(() => {\r\n        history.push(\"/todos\");\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1 className='m-5'>Sign In</h1>\r\n      <button\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          signInWithGoogle();\r\n        }}\r\n        className=\"btn btn-success\"\r\n      >\r\n        Sign In with Google\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default SignIn;","import React from 'react';\nimport PrivateRoute from \"./UI/Components/PrivateRoute\";\nimport Todos from \"./UI/Routes/Todos\";\nimport SignIn from \"./UI/Routes/SignIn\";\nimport {Switch, Route} from \"react-router-dom\";\nfunction App() {\n  return (\n    <div style = {{\n      textAlign: \"center\"\n    }}>\n      <h1 className=\"jumbotron text-center\">Redux Todo App</h1>\n      <Switch>\n        <PrivateRoute path = \"/todos\">\n          <Todos />\n        </PrivateRoute>\n        <Route path = \"/\">\n        <SignIn />\n        </Route>\n      </Switch>\n\n    </div>\n  );\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { rootReducer } from \"./ducks/reducers\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAd4eJ6sW-JoEBoBlC8_bf1c246my4GXnE\",\n  authDomain: \"to-do-app-b0d04.firebaseapp.com\",\n  databaseURL: \"https://to-do-app-b0d04.firebaseio.com\",\n  projectId: \"to-do-app-b0d04\",\n  storageBucket: \"to-do-app-b0d04.appspot.com\",\n  messagingSenderId: \"598084711554\",\n  appId: \"1:598084711554:web:95695b55375efe60c8709b\",\n  measurementId: \"G-2RMYB947NN\"\n};\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nconst initialState = {};\nconst store = createStore(rootReducer, initialState);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, //since we are using Firestore\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}